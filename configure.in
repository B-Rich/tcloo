# $Id: configure.in,v 1.13 2007/10/03 14:21:40 dkf Exp $

AC_REVISION($Revision: 1.13 $)
AC_INIT([TclOO],[0.1])
AC_CONFIG_AUX_DIR(tclconfig)

TEA_INIT([3.6])
TEA_PATH_TCLCONFIG
TEA_LOAD_TCLCONFIG
TEA_PREFIX
TEA_SETUP_COMPILER
AC_C_INLINE
TEA_ADD_SOURCES(
	tclOO.c tclOOCall.c tclOODefineCmds.c tclOOInfo.c tclOOMethod.c
	tclOOStubInit.c)
AS_IF([test ${TEA_PLATFORM} = "windows"], [
    PKG_OBJECTS="${PKG_OBJECTS} ${PACKAGE_NAME}.res.o"
    RC=windres
    AC_SUBST(RC)])
TEA_ADD_STUB_SOURCES(tclOOStubLib.c)
TEA_ADD_HEADERS([generic/tclOO.h generic/tclOOInt.h])
TEA_ADD_INCLUDES([-I. -I\"`${CYGPATH} ${srcdir}/generic`\"])
TEA_PRIVATE_TCL_HEADERS
TEA_ENABLE_THREADS
TEA_ENABLE_SHARED
TEA_ENABLE_SYMBOLS
TEA_CONFIG_CFLAGS

CLEANFILES="$CLEANFILES pkgIndex.tcl"
AC_SUBST(CLEANFILES)
AC_DEFINE(USE_TCL_STUBS,[1],[Should always be 1])
AC_DEFINE(BUILD_tcloo,[1],[Set to 1 when building package])

TEA_MAKE_LIB

TEA_PROG_TCLSH
CONFIGURE_OUTPUTS="Makefile config.cache config.log config.status"
AC_SUBST(CONFIGURE_OUTPUTS)

AC_PATH_PROG(SDX, sdx, none)
AS_IF([test "${SDX}" = "none"],[
    AC_PATH_PROG(SDX_KIT, sdx.kit, none)
    AS_IF([test "${SDX_KIT}" != "none"],[
	# We assume that sdx.kit is on the path, and that the default tclsh
	# is activetcl
	SDX="tclsh '${SDX_KIT}'"])])
AS_IF([test "${SDX}" = "none"],[
    AC_MSG_WARN([cannot find sdx; building starkits will fail; building as a normal library still supported])])

# TODO: Adapt this for OSX Frameworks...
# This next bit is a bit ugly, but it makes things for tclooConfig.sh...
eval "TCLOO_PRIVATE_INCLUDE_DIR=\"${srcdir}/generic\""
case ${TCLOO_PRIVATE_INCLUDE_DIR} in
    /*) TCLOO_PRIVATE_INCLUDE_SPEC="-I${TCLOO_PRIVATE_INCLUDE_DIR}" ;;
    *)  TCLOO_PRIVATE_INCLUDE_SPEC="-I`pwd`/${TCLOO_PRIVATE_INCLUDE_DIR}" ;;
esac
eval "TCLOO_INCLUDE_SPEC=\"-I${includedir}\""
if test ${TCL_LIB_VERSIONS_OK} = nodots; then
    eval "TCLOO_LIB_SPEC=\"-L${libdir}/${PACKAGE_NAME}${PACKAGE_VERSION} -l${PACKAGE_NAME}${TCL_TRIM_DOTS}\""
    eval "TCLOO_STUB_LIB_SPEC=\"-L${libdir} -l${PACKAGE_NAME}stub${TCL_TRIM_DOTS}\""
else
    eval "TCLOO_LIB_SPEC=\"-L${libdir}/${PACKAGE_NAME}${PACKAGE_VERSION} -l${PACKAGE_NAME}${PACKAGE_VERSION}\""
    eval "TCLOO_STUB_LIB_SPEC=\"-L${libdir} -l${PACKAGE_NAME}stub${PACKAGE_VERSION}\""
fi
AC_SUBST(TCLOO_INCLUDE_SPEC)
AC_SUBST(TCLOO_PRIVATE_INCLUDE_SPEC)
AC_SUBST(TCLOO_LIB_SPEC)
AC_SUBST(TCLOO_STUB_LIB_SPEC)

AC_CONFIG_FILES(Makefile tclooConfig.sh)
AC_OUTPUT
